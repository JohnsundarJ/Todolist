{"version":3,"sources":["Components/TodoItem.js","Components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","onMarkItemComplete","event","props","markItemComplete","id","onDeleteItem","deleteItem","itemClass","this","status","className","type","onChange","task","style","float","marginTop","onClick","Component","TodoList","items","map","item","React","BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","Button","App","state","value","handleInput","setState","target","handleAddItem","preventDefault","newItem","Date","now","prevState","concat","handleMarkItemComplete","itemId","updatedItems","handleDeleteItem","filter","classes","md","xs","AppBar","position","color","Toolbar","Typography","title","Grid","container","Card","margin","CardContent","paddingTop","spacing","TextField","text","label","variant","fullWidth","disableRipple","theme","flexGrow","button","each","width","height","eachac","eacheq","textAlign","textbox","marginLeft","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a3e5591.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './component.css';\r\n\r\nclass TodoItem extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        \r\n        this.onMarkItemComplete=(event)=>{\r\n            this.props.markItemComplete(this.props.id)\r\n        }\r\n        \r\n        this.onDeleteItem=(event)=>{\r\n            this.props.deleteItem(this.props.id)\r\n        }  \r\n    }  \r\n    render() {\r\n        const itemClass = \"isItemCompleted-\" + (this.props.status ? \"done\" : \"undone\");\r\n     \r\n    return (\r\n        <div className=\"container-fluid\">\r\n        <div className=\"item\">\r\n        \r\n        <input type=\"checkbox\" onChange={this.onMarkItemComplete} />\r\n        <span className={itemClass}> {this.props.task} </span> \r\n        <button style={{float:'right', marginTop:\"-4px\"}} type=\"button\" className=\"btn btn-danger btn-sm\" onClick={this.onDeleteItem}>x</button>\r\n        \r\n        </div>\r\n        </div>\r\n    );\r\n  }   \r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport './component.css';\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    render() {\r\n    return (  \r\n        <div>\r\n        {this.props.items.map(item => (\r\n        <TodoItem id={item.id} status={item.status} task={item.task} deleteItem={this.props.deleteItem} markItemComplete={this.props.markItemComplete} />\r\n        ))} \r\n    </div>\r\n        \r\n    );\r\n  } \r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TodoList from './Components/TodoList';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\nimport AppBar from '@material-ui/core/AppBar';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\n// import TodoItem from './Components/TodoItem';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    backgroundColor: '#bbb'\n  },\n  each: {\n    width: '25%',\n    height: '60px',\n    fontSize: '35px',\n    backgroundColor: 'blue',\n    color: 'white'\n  },\n  eachac: {\n    width: '25%',\n    height: '60px',\n    fontSize: '35px',\n    backgroundColor: 'pink',\n    color: 'black'\n  },\n  eacheq: {\n    width: '25%',\n    height: '60px',\n    fontSize: '35px',\n    backgroundColor: 'pink',\n    color: 'black'\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center',\n    fontSize:\"25px\"\n  },\n  textbox: {\n    height: '60px',\n    backgroundColor: '#bbb',\n    width: '100%',\n    fontSize: '25px',\n    textAlign: 'right'\n  },\n  text: {\n    width: '100%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    color: 'white',\n    lineHeight: '5px',\n  },\n});\n\n\nconst BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    padding: '6px 12px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#007bff',\n    borderColor: '#007bff',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n})(Button);\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      value: \"\",\n      items: []\n    }\n\n    this.handleInput = (event) => {\n      this.setState({\n        value: event.target.value\n      })\n    }\n\n    this.handleAddItem = (event) => {\n      event.preventDefault();\n\n      if (this.state.value === \"\")\n        return;\n\n      const newItem = {\n        task: this.state.value,\n        id: Date.now(),\n        status: false\n      }\n\n      this.setState((prevState) => ({\n        items: prevState.items.concat(newItem),\n        value: \"\",\n\n      }))\n    }\n\n    this.handleMarkItemComplete = (itemId) => {\n\n      const updatedItems = this.state.items.map(item => {\n        if (itemId === item.id)\n          item.status = !item.status;\n\n        return item;\n      })\n\n      this.setState({\n        items: [].concat(updatedItems)\n      })\n    }\n\n    this.handleDeleteItem = (itemId) => {\n\n      const updatedItems = this.state.items.filter(item => {\n        return item.id !== itemId\n      })\n\n      this.setState({\n        items: [].concat(updatedItems)\n      })\n    }\n  }\n\n  render() {\n\n\n    const { classes } = this.props;\n    return (\n      <div md={12} xs={12}>\n        <div className={classes.root}>\n          <AppBar position=\"fixed\" color=\"secondary\">\n            <Toolbar>\n              <Typography className={classes.title}>\n                TODO LIST\n                          </Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div style={{ padding: \"40px\" }}>\n          <Grid container>\n            <Grid item md={4} />\n            <Grid item md={4} xs={12}>\n              <Card style={{\n                margin: \"auto\",\n                boxShadow: \"0px 0px 5px 5px rgba(0,0,0,0.3)\",\n                \"&:hover\": {\n                  boxShadow: \"0 16px 30px 12.125px rgba(0,0,0,0.3)\"\n                }\n              }}>\n                <CardContent>\n                  <div style={{paddingTop:\"10px\"}}></div>\n                  <Grid container spacing={3} >\n                    <Grid item md={2} />\n                    <Grid item md={8} xs={12}>\n                      <TextField\n                        className={classes.text} id=\"weight\" value={this.state.value} onChange={this.handleInput} label=\"Add New Task\" />\n\n                      {/* <input style={input_style} placeHolder=\"Add New Todo\" type=\"input\" onChange={this.handleInput} value={this.state.value} /> */}\n                      {/* <button style={btn_style} type=\"button\" className=\"btn btn-primary btn-md\" onClick={this.handleAddItem}>Add</button> */}\n\n                    </Grid>\n                  </Grid>\n                  <Grid item md={2} />\n                  <br />\n                  <Grid container spacing={3} >\n                    <Grid item md={4} xs={3} />\n                    <Grid item md={4} xs={6}>\n                      <BootstrapButton variant=\"contained\" color=\"primary\" fullWidth disableRipple\n                        className={classes.margin}\n                        onClick={this.handleAddItem}\n                      >\n                        Add\n                              </BootstrapButton>\n                    </Grid>\n                  </Grid>\n                  <Grid item md={4} xs={3} />\n                  <br />\n                  <TodoList items={this.state.items} deleteItem={this.handleDeleteItem} markItemComplete={this.handleMarkItemComplete} />\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item md={4} />\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}